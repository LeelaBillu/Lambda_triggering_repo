name: Terragrunt Plan on Pull Request

on:
  pull_request:
    branches:
      - main  # Trigger this workflow for pull requests targeting the 'main' branch

jobs:
  terragrunt:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./Env  # Default working directory for all steps (Env)

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up AWS credentials using GitHub Secrets
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Set your desired AWS region

      # Step 3: Install Terraform (if not already installed)
      - name: Set Terraform 
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.5"

      # Step 4: Set up Terragrunt
      - name: Set up Terragrunt
        uses: the-commons-project/terragrunt-github-actions@1.0.6

      # Step 5: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'  # Set the Python version you need (e.g., 3.8)

      # Step 6: Create and activate a virtual environment
      - name: Create virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      # Step 7: Install Python dependencies (e.g., boto3)
      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install boto3

      # Step 8: Zip the Python file (in the lambda directory, no virtualenv here)
      - name: Zip the Python file
        working-directory: ./lambda  # Run the zip step inside the lambda directory
        run: |
          zip -r lambda_function_payload.zip lambda_function.py  # Zip the file in the lambda directory

      # Step 9: Initialize Terragrunt (in the default Env directory)
      - name: Terragrunt Init
        run: terragrunt run-all init

      # Step 10: Run Terraform Plan (in the default Env directory)
      - name: Run Terraform Plan
        run: terragrunt run-all plan -lock=false

      # Optional Step 11: Apply Terraform Changes (in the default Env directory, be cautious)
      - name: Run Terraform Apply
        run: terragrunt run-all apply -auto-approve -lock=false
